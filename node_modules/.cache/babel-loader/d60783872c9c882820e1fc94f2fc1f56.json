{"ast":null,"code":"import _slicedToArray from \"/Users/chenting/Desktop/ctt/first/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chenting/Desktop/ctt/first/src/Calc.js\";\nimport React, { Fragment, useReducer } from 'react';\n\nfunction Calc() {\n  const _useReducer = useReducer((state, action) => {\n    switch (action) {\n      case 'add':\n        return state + 1;\n\n      case 'sub':\n        return state - 1;\n\n      default:\n        return state;\n    }\n  }, 0),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        count = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\u73B0\\u5728\\u7684\\u5206\\u6570\\u662F\", count), React.createElement(\"button\", {\n    onClick: () => {\n      this.dispatch('add');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nexport default Calc;","map":{"version":3,"sources":["/Users/chenting/Desktop/ctt/first/src/Calc.js"],"names":["React","Fragment","useReducer","Calc","state","action","count","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;AAEA,SAASC,IAAT,GAAiB;AAAA,sBACWD,UAAU,CAAC,CAACE,KAAD,EAAQC,MAAR,KAAmB;AACtD,YAAQA,MAAR;AACE,WAAK,KAAL;AACE,eAAOD,KAAK,GAAG,CAAf;;AACF,WAAK,KAAL;AACE,eAAOA,KAAK,GAAG,CAAf;;AACF;AACE,eAAOA,KAAP;AANJ;AAQD,GATmC,EASjC,CATiC,CADrB;AAAA;AAAA,QACRE,KADQ;AAAA,QACDC,QADC;;AAWf,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAUD,KAAV,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAC,WAAKC,QAAL,CAAc,KAAd;AAAqB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeJ,IAAf","sourcesContent":["import React, { Fragment, useReducer } from 'react'\n\nfunction Calc () {\n  const [count, dispatch] = useReducer((state, action) => {\n    switch (action) {\n      case 'add':\n        return state + 1\n      case 'sub':\n        return state - 1\n      default:\n        return state\n    }\n  }, 0)\n  return (\n    <Fragment>\n      <p>现在的分数是{count}</p>\n      <button onClick={() => {this.dispatch('add')}}></button>\n    </Fragment>\n  )\n}\n\nexport default Calc"]},"metadata":{},"sourceType":"module"}