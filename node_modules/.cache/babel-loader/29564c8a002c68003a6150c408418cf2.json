{"ast":null,"code":"import _slicedToArray from \"/Users/chenting/Desktop/ctt/first/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chenting/Desktop/ctt/first/src/reduxDemo/Color.js\";\nimport React, { createContext, useReducer } from 'react';\nexport const ColorContext = createContext({});\nexport const UPDATE_COLOR = 'UPDATE_COLOR';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_COLOR:\n      return action.color;\n\n    default:\n      return state;\n  }\n};\n\nexport const Color = props => {\n  const _useReducer = useReducer(reducer, 'color'),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        color = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(ColorContext.Provider, {\n    value: {\n      color,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/chenting/Desktop/ctt/first/src/reduxDemo/Color.js"],"names":["React","createContext","useReducer","ColorContext","UPDATE_COLOR","reducer","state","action","type","color","Color","props","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMG,YAAY,GAAG,cAArB;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,YAAL;AACE,aAAOG,MAAM,CAACE,KAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,OAAO,MAAMI,KAAK,GAAGC,KAAK,IAAI;AAAA,sBAEFT,UAAU,CAACG,OAAD,EAAU,OAAV,CAFR;AAAA;AAAA,QAErBI,KAFqB;AAAA,QAEdG,QAFc;;AAG5B,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF;AAKD,CARM","sourcesContent":["import React, { createContext, useReducer } from 'react'\n\nexport const ColorContext = createContext({})\n\nexport const UPDATE_COLOR = 'UPDATE_COLOR'\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case UPDATE_COLOR: \n      return action.color\n    default:\n      return state\n  }\n}\n\nexport const Color = props => {\n  \n  const [color, dispatch] = useReducer(reducer, 'color')\n  return (\n    <ColorContext.Provider value={{ color, dispatch }}>\n      {props.children}\n    </ColorContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}